# This workflow will build and publish the release to Docker Hub and GitHub Container Registry (GHCR)

name: Publish Release

on:
  release:
    types: [published]

jobs:
  build:
    name: 🏗️ Build Release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.repository == 'apptastic-software/trading-calendar'

    steps:
      - name: Checkout repository ⚙️
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Version number 🔢
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3 | cut -c2-)
          echo "New version: ${NEW_VERSION}"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Bump version 🖊️
        uses: kurt-code/gha-properties@a2a0b14f87e2389e7b65fced95cef9d7cea2fc20 # v0.0.2
        id: read-properties
        with:
          operation: 'write'
          file-path: 'trading_calendar/__init__.py'
          key-value-pairs: '{"__version__": "\"${{ env.new_version }}\""}'

      - name: Commit version update 🔀
        uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v6.0.1
        id: auto-commit-action-bump-version
        with:
            commit_message: Bump version to ${{ env.new_version }}
            file_pattern: trading_calendar/__init__.py
            branch: main
  
      - name: "Version - changes have been detected 🔍"
        if: steps.auto-commit-action-bump-version.outputs.changes_detected == 'true'
        run: echo "Updated trading_calendar/__init__.py with version ${{ env.new_version }} ✅"

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
  
      - name: Install dependencies ⚙️ 
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Build and test 🏗️
        run: |
          pip install httpx pytest pytest-cov coverage codecov
          pytest -v --doctest-modules --junitxml=junit/test-results.xml --cov=trading_calendar --cov-report=xml --cov-report=html
  

  documentation:
    name: 📚 Publish API doc
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository ⚙️
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Version number 🔢
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3 | cut -c2-)
          echo "New version: ${NEW_VERSION}"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_ENV
  
      - name: Version in __init__.py 🔢
        run: |
          cat trading_calendar/__init__.py
          echo "__version__=\"${{ env.new_version }}\"" > trading_calendar/__init__.py
          cat trading_calendar/__init__.py

      - name: Generate OpenAPI specification 📝
        uses: column-st/fastapi-openapi-specs-action@dcffa69c27f2b77a9d6a4e5ebb91d62c712650c9 # v1.0.2
        with:
          moduleDir: trading_calendar
          outputExtension: json

      - name: Generate API doc 📝
        uses: seeebiii/redoc-cli-github-action@c9649b33918da5eb290b81cd03a943caea091540 # v10
        with:
          args: 'bundle openapi.json -o docs/api-doc/index.html'

      - name: Deploy latest API doc 📚
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4.7.3
        with:
          branch: gh-pages
          folder: docs/api-doc
          target-folder: api-doc/latest
          commit-message: Publishing ${{ env.new_version }} API doc
          clean: true
          dry-run: false

      - name: Deploy API doc 📚
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4.7.3
        with:
          branch: gh-pages
          folder: docs/api-doc
          target-folder: api-doc/${{ env.new_version }}
          commit-message: Publishing API doc
          clean: true
          dry-run: false


  publish-release:
    needs: [build]
    name: 🚀 Publish Release
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository ⚙️
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Version number 🔢
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3 | cut -c2-)
          echo "New version: ${NEW_VERSION}"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Version in __init__.py 🔢
        run: |
          cat trading_calendar/__init__.py
          echo "__version__=\"${{ env.new_version }}\"" > trading_calendar/__init__.py
          cat trading_calendar/__init__.py

      - name: Set up QEMU ⚙️
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx ⚙️
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker Hub 🔐
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry (GHCR) 🔐
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to Docker Hub and GHCR 🚀
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            apptasticsoftware/trading-calendar:latest
            apptasticsoftware/trading-calendar:${{ env.new_version }}
            ghcr.io/apptastic-software/trading-calendar:latest
            ghcr.io/apptastic-software/trading-calendar:${{ env.new_version }}
          annotations: |
            org.opencontainers.image.title=Trading Calendar
            org.opencontainers.image.description=REST API service for retrieving trading hours, market holidays and trading schedules for financial exchanges worldwide
            org.opencontainers.image.version=${{ env.new_version }}
            org.opencontainers.image.url=https://github.com/apptastic-software/trading-calendar
            org.opencontainers.image.source=https://github.com/apptastic-software/trading-calendar
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.vendor=Apptastic Software
            org.opencontainers.image.authors=Apptastic Software

      - name: Attest build provenance for Docker Hub 🔏
        id: attest-docker-hub
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-name: index.docker.io/apptasticsoftware/trading-calendar
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false

      - name: Attest build provenance for GHCR 🔏
        id: attest-ghcr
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-name: ghcr.io/apptastic-software/trading-calendar
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false